services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  api-gw:
    build:
      context: ./api-gw
    volumes:
      - ./api-gw:/app
      - ./keys/api-gw:/app/keys
      - /app/node_modules
    working_dir: /app
    command: npm run start:dev
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: unless-stopped
    depends_on:
      - auth
      - event
      - zookeeper
      - kafka
    networks:
      - auth-net
      - event-net
      - public-net

  auth:
    build:
      context: ./auth
    volumes:
      - ./auth:/app
      - ./keys/auth:/app/keys
      - /app/node_modules
    working_dir: /app
    command: npm run start:dev
    # ports:
    #   - "3001:4000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: unless-stopped
    depends_on:
      - auth-db
      - kafka
    networks:
      - auth-net
      - kafka-net

  event:
    build:
      context: ./event
    volumes:
      - ./event:/app
      - /app/node_modules
    working_dir: /app
    command: npm run start:dev
    # ports:
    #   - "3002:5000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: unless-stopped
    depends_on:
      - event-db
      - kafka
    networks:
      - event-net
      - kafka-net

  auth-db:
    image: mongo:6
    container_name: auth-db
    restart: unless-stopped
    # ports:
    #   - "27017:27017"
    volumes:
      - auth_db_data:/data/db
    networks:
      - auth-net

  event-db:
    image: mongo:6
    container_name: event-db
    restart: unless-stopped
    # ports:
    #   - "27018:27017"
    volumes:
      - event_db_data:/data/db
    networks:
      - event-net

volumes:
  auth_db_data:
  event_db_data:

networks:
  auth-net:
    internal: true
  event-net:
    internal: true
  kafka-net:
    internal: true
  public-net:
    driver: bridge
